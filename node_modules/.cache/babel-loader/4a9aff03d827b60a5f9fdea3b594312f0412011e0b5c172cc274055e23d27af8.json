{"ast":null,"code":"import{applySnapshot,getSnapshot,types}from\"mobx-state-tree\";import{useMemo}from\"react\";import{initUser,user}from\"./user/user\";var RootStore=types.model({user:user}).actions(function(self){var initialState={};return{afterCreate:function afterCreate(){initialState=getSnapshot(self);},reset:function reset(){applySnapshot(self,initialState);}};});var store;export function resetStore(){store.reset();}export function initializeStore(){var _store2;var snapshot=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var _store=(_store2=store)!==null&&_store2!==void 0?_store2:RootStore.create({user:initUser()});if(snapshot){applySnapshot(_store,snapshot);}if(typeof window===\"undefined\"){return _store;}if(!store){store=_store;}// makeInspectable(store);\nreturn _store;}export function useStore(initialState){return useMemo(function(){return initializeStore(initialState);},[initialState]);}","map":{"version":3,"names":["applySnapshot","getSnapshot","types","useMemo","initUser","user","RootStore","model","actions","self","initialState","afterCreate","reset","store","resetStore","initializeStore","_store2","snapshot","arguments","length","undefined","_store","create","window","useStore"],"sources":["/Users/altafmalik/ReactJS/Obed Bhai/Tax_Engine_Test/src/stores/root-store.ts"],"sourcesContent":["import { applySnapshot, getSnapshot, Instance, types } from \"mobx-state-tree\";\nimport { useMemo } from \"react\";\nimport { initUser, user } from \"./user/user\";\n\nconst RootStore = types\n  .model({\n    user: user,\n  })\n  .actions((self) => {\n    let initialState = {};\n    return {\n      afterCreate: () => {\n        initialState = getSnapshot(self);\n      },\n      reset: () => {\n        applySnapshot(self, initialState);\n      },\n    };\n  });\n\nexport type RootStoreType = Instance<typeof RootStore>;\n\nlet store: RootStoreType;\n\nexport function resetStore() {\n  store.reset();\n}\n\nexport function initializeStore(snapshot = null) {\n  const _store =\n    store ??\n    RootStore.create({\n      user: initUser(),\n    });\n  if (snapshot) {\n    applySnapshot(_store, snapshot);\n  }\n  if (typeof window === \"undefined\") {\n    return _store;\n  }\n\n  if (!store) {\n    store = _store;\n  }\n  // makeInspectable(store);\n  return _store;\n}\n\nexport function useStore(\n  initialState: null | undefined\n): Instance<typeof RootStore> {\n  return useMemo(() => initializeStore(initialState), [initialState]);\n}\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,WAAW,CAAYC,KAAK,KAAQ,iBAAiB,CAC7E,OAASC,OAAO,KAAQ,OAAO,CAC/B,OAASC,QAAQ,CAAEC,IAAI,KAAQ,aAAa,CAE5C,GAAM,CAAAC,SAAS,CAAGJ,KAAK,CACpBK,KAAK,CAAC,CACLF,IAAI,CAAEA,IACR,CAAC,CAAC,CACDG,OAAO,CAAC,SAACC,IAAI,CAAK,CACjB,GAAI,CAAAC,YAAY,CAAG,CAAC,CAAC,CACrB,MAAO,CACLC,WAAW,CAAE,SAAAA,YAAA,CAAM,CACjBD,YAAY,CAAGT,WAAW,CAACQ,IAAI,CAAC,CAClC,CAAC,CACDG,KAAK,CAAE,SAAAA,MAAA,CAAM,CACXZ,aAAa,CAACS,IAAI,CAAEC,YAAY,CAAC,CACnC,CACF,CAAC,CACH,CAAC,CAAC,CAIJ,GAAI,CAAAG,KAAoB,CAExB,MAAO,SAAS,CAAAC,UAAUA,CAAA,CAAG,CAC3BD,KAAK,CAACD,KAAK,EAAE,CACf,CAEA,MAAO,SAAS,CAAAG,eAAeA,CAAA,CAAkB,KAAAC,OAAA,IAAjB,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC7C,GAAM,CAAAG,MAAM,EAAAL,OAAA,CACVH,KAAK,UAAAG,OAAA,UAAAA,OAAA,CACLV,SAAS,CAACgB,MAAM,CAAC,CACfjB,IAAI,CAAED,QAAQ,EAChB,CAAC,CAAC,CACJ,GAAIa,QAAQ,CAAE,CACZjB,aAAa,CAACqB,MAAM,CAAEJ,QAAQ,CAAC,CACjC,CACA,GAAI,MAAO,CAAAM,MAAM,GAAK,WAAW,CAAE,CACjC,MAAO,CAAAF,MAAM,CACf,CAEA,GAAI,CAACR,KAAK,CAAE,CACVA,KAAK,CAAGQ,MAAM,CAChB,CACA;AACA,MAAO,CAAAA,MAAM,CACf,CAEA,MAAO,SAAS,CAAAG,QAAQA,CACtBd,YAA8B,CACF,CAC5B,MAAO,CAAAP,OAAO,CAAC,iBAAM,CAAAY,eAAe,CAACL,YAAY,CAAC,GAAE,CAACA,YAAY,CAAC,CAAC,CACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}